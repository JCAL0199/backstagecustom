app:
  # Should be the same as backend.baseUrl when using the `app-backend` plugin.
  baseUrl:
    $env: APP_BASE_URL_PROD

backend:
  # Note that the baseUrl should be the URL that the browser and other clients
  # should use when communicating with the backend, i.e. it needs to be
  # reachable not just from within the backend host, but from all of your
  # callers. When its value is "http://localhost:7007", it's strictly private
  # and can't be reached by others.
  baseUrl:
    $env: BACKEND_BASE_URL_PROD
  # The listener can also be expressed as a single <host>:<port> string. In this case we bind to
  # all interfaces, the most permissive setting. The right value depends on your specific deployment.
  listen: ':7007'

  # config options: https://node-postgres.com/apis/client
  #database:
  #  client: pg
  #  connection:
  #    host: ${POSTGRES_HOST}
  #    port: ${POSTGRES_PORT}
  #    user: ${POSTGRES_USER}
  #    password: ${POSTGRES_PASSWORD}
  database:
    client: pg
    connection:
      host:
        $env: DB_BACKSATAGE_HOST_PROD
      port:
        $env: DB_BACKSATAGE_PORT_PROD
      user:
        $env: DB_BACKSATAGE_USER_PROD
      password:
        $env: DB_BACKSATAGE_PASSWORD_PROD
      database:
        $env: DB_BACKSATAGE_DATABASE_PROD

      # https://node-postgres.com/features/ssl
      # you can set the sslmode configuration option via the `PGSSLMODE` environment variable
      # see https://www.postgresql.org/docs/current/libpq-ssl.html Table 33.1. SSL Mode Descriptions (e.g. require)
      # ssl:
      #   ca: # if you have a CA file and want to verify it you can uncomment this section
      #     $file: <file-path>/ca/server.crt
  reading:
    allow:
      - host: raw.githubusercontent.com

auth:
  # see https://backstage.io/docs/auth/ to learn about auth providers
  providers:
    # See https://backstage.io/docs/auth/guest/provider
    guest: {}
    github:
      development:
        clientId:
          $env: CLIENTID_GITHUB_PROD
        clientSecret:
          $env: CLIENTSECRET_GITHUB_PROD
        callbackUrl:
          $env: CALLBACKURL_GITHUB_PROD
        signIn:
          resolvers:
            # Matches the GitHub username with the Backstage user entity name.
            # See https://backstage.io/docs/auth/github/provider#resolvers for more resolvers.
            - resolver: usernameMatchingUserEntityName
    gitlab:
      development:
        audience: https://gitlab.com
        clientId:
          $env: CLIENTID_GITLAB_PROD
        clientSecret:
          $env: CLIENTSECRET_GITLAB_PROD
        callbackUrl:
          $env: CALLBACKURL_GITLAB_PROD

catalog:
  # Overrides the default list locations from app-config.yaml as these contain example data.
  # See https://backstage.io/docs/features/software-catalog/#adding-components-to-the-catalog for more details
  # on how to get entities into the catalog.
  locations:
    # Local example data, replace this with your production config, these are intended for demo use only.
    # File locations are relative to the backend process, typically in a deployed context, such as in a Docker container, this will be the root
    - type: file
      target: ./examples/entities.yaml

    # Local example template
    - type: file
      target: ./examples/template/template.yaml
      rules:
        - allow: [Template]

    # Local example organizational data
    - type: file
      target: ./examples/org.yaml
      rules:
        - allow: [User, Group]
    - type: url
      target: https://raw.githubusercontent.com/organizationjc/backstage-catalog/main/org.yaml
      rules:
        - allow: [User, Group, Catalog]
    - type: url
      target: https://raw.githubusercontent.com/organizationjc/backstage-catalog/main/catalog/entities/Systems.yaml
    - type: url
      target: https://raw.githubusercontent.com/organizationjc/backstage-catalog/main/catalog/entities/Groups.yaml
    - type: url
      target: https://raw.githubusercontent.com/organizationjc/backstage-catalog/main/catalog/entities/Users.yaml
    - type: url
      target: https://raw.githubusercontent.com/organizationjc/backstage-catalog/main/catalog/entities/Components.yaml
  useUrlReadersSearch: true
  

kubernetes:
  # see https://backstage.io/docs/features/kubernetes/configuration for kubernetes configuration options

# see https://backstage.io/docs/permissions/getting-started for more on the permission framework
permission:
  # setting this to `false` will disable permissions
  enabled: true